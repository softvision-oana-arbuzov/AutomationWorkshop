{
	"info": {
		"_postman_id": "30830b60-12c0-4bda-a3fe-1feb30f599f7",
		"name": "OanaArb_PetCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "https://petstore.swagger.io/v2/pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "24a983f1-20df-4370-8a01-481feb436569",
						"exec": [
							"pm.test(\"Response code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     // assert that the status code is 200",
							"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
							"     // assert that the response has a valid JSON body",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"});",
							"",
							"pm.test(\"Pet added in the correct category\", function () {",
							"    pm.expect(pm.response.json().category.name).to.equal(\"dog\");",
							"});",
							"",
							"pm.test(\"Pet added in the correct ID category\", function () {",
							"    pm.expect(pm.response.json().category.id).to.equal(1);",
							"});",
							"",
							"pm.test(\"Pet has a name\", function () {",
							"    pm.expect(pm.response.json().name).to.equal(\"Pufy\");",
							"});",
							"",
							"pm.test(\"Pet has ID\", function () {",
							"    pm.expect(pm.response.json().id).to.equal(100);",
							"});",
							"",
							"pm.test(\"Pet has the correct status\", function () {",
							"    pm.expect(pm.response.json().status).to.equal(\"available\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 100,\r\n  \"category\": {\r\n    \"id\": 1,\r\n    \"name\": \"dog\"\r\n  },\r\n  \"name\": \"Pufy\",\r\n  \"photoUrls\": [\r\n    \"https://www.google.com/url?sa=i&source=images&cd=&cad=rja&uact=8&ved=2ahUKEwiJ35X9zaDhAhWHJVAKHXIzBAEQjRx6BAgBEAU&url=https%3A%2F%2Fwww.mnn.com%2Flifestyle%2Farts-culture%2Fstories%2Fhow-to-make-it-as-a-pet-photographer&psig=AOvVaw08hKa03lOWOYBCAdPWMky6&ust=1553717259091581\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"dog\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}"
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				},
				"description": "Added dog - Pufy with ID - 100"
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1c072bf2-7e6a-4f6a-8d2f-175e6992a0f7",
						"exec": [
							"pm.test(\"Response code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     // assert that the status code is 200",
							"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
							"     // assert that the response has a valid JSON body",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"});",
							"",
							"pm.test(\"Pet added in the correct category\", function () {",
							"    pm.expect(pm.response.json().category.name).to.equal(\"cat\");",
							"});",
							"",
							"pm.test(\"Pet added in the correct ID category\", function () {",
							"    pm.expect(pm.response.json().category.id).to.equal(2);",
							"});",
							"",
							"pm.test(\"Pet has a name\", function () {",
							"    pm.expect(pm.response.json().name).to.equal(\"Kitty\");",
							"});",
							"",
							"pm.test(\"Pet has ID\", function () {",
							"    pm.expect(pm.response.json().id).to.equal(200);",
							"});",
							"",
							"pm.test(\"Pet has the correct status\", function () {",
							"    pm.expect(pm.response.json().status).to.equal(\"available\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 200,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"cat\"\r\n  },\r\n  \"name\": \"Kitty\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"cat\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}"
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				},
				"description": "Added cat category (ID - 2) - Kitty with ID - 200 "
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1c072bf2-7e6a-4f6a-8d2f-175e6992a0f7",
						"exec": [
							"pm.test(\"Response code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     // assert that the status code is 200",
							"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
							"     // assert that the response has a valid JSON body",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"});",
							"",
							"pm.test(\"Pet added in the correct category\", function () {",
							"    pm.expect(pm.response.json().category.name).to.equal(\"cat\");",
							"});",
							"",
							"pm.test(\"Pet added in the correct ID category\", function () {",
							"    pm.expect(pm.response.json().category.id).to.equal(2);",
							"});",
							"",
							"pm.test(\"Pet has a name\", function () {",
							"    pm.expect(pm.response.json().name).to.equal(\"Kitty\");",
							"});",
							"",
							"pm.test(\"Pet has ID\", function () {",
							"    pm.expect(pm.response.json().id).to.equal(200);",
							"});",
							"",
							"pm.test(\"Pet has the correct status\", function () {",
							"    pm.expect(pm.response.json().status).to.equal(\"available\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 200,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"cat\"\r\n  },\r\n  \"name\": \"Kitty\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"cat\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}"
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				},
				"description": "Added pig category (ID - 3) - Toto with ID - 300 "
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet/100",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7df98d94-c196-4a4f-b386-89bb2c31f80b",
						"exec": [
							"pm.test(\"Response code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     // assert that the status code is 200",
							"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
							"     // assert that the response has a valid JSON body",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"});",
							"",
							"pm.test(\"Pet added in the correct category\", function () {",
							"    pm.expect(pm.response.json().category.name).to.equal(\"dog\");",
							"});",
							"",
							"pm.test(\"Pet added in the correct ID category\", function () {",
							"    pm.expect(pm.response.json().category.id).to.equal(1);",
							"});",
							"",
							"pm.test(\"Pet has a name\", function () {",
							"    pm.expect(pm.response.json().name).to.equal(\"Pufy\");",
							"});",
							"",
							"pm.test(\"Pet has ID\", function () {",
							"    pm.expect(pm.response.json().id).to.equal(100);",
							"});",
							"",
							"pm.test(\"Pet has the correct status\", function () {",
							"    pm.expect(pm.response.json().status).to.equal(\"available\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/100",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"100"
					]
				},
				"description": "Get dog with ID - 100 => Pufy"
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet/200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2fab4dfb-9e86-44e0-9ad0-19499f3c4d1e",
						"exec": [
							"pm.test(\"Response code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     // assert that the status code is 200",
							"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
							"     // assert that the response has a valid JSON body",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"});",
							"",
							"pm.test(\"Pet added in the correct category\", function () {",
							"    pm.expect(pm.response.json().category.name).to.equal(\"cat\");",
							"});",
							"",
							"pm.test(\"Pet added in the correct ID category\", function () {",
							"    pm.expect(pm.response.json().category.id).to.equal(2);",
							"});",
							"",
							"pm.test(\"Pet has a name\", function () {",
							"    pm.expect(pm.response.json().name).to.equal(\"Kitty\");",
							"});",
							"",
							"pm.test(\"Pet has ID\", function () {",
							"    pm.expect(pm.response.json().id).to.equal(200);",
							"});",
							"",
							"pm.test(\"Pet has the correct status\", function () {",
							"    pm.expect(pm.response.json().status).to.equal(\"available\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/200",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"200"
					]
				},
				"description": "Get cat with ID - 200 => Kitty\n"
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet/300",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2fab4dfb-9e86-44e0-9ad0-19499f3c4d1e",
						"exec": [
							"pm.test(\"Response code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     // assert that the status code is 200",
							"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
							"     // assert that the response has a valid JSON body",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"});",
							"",
							"pm.test(\"Pet added in the correct category\", function () {",
							"    pm.expect(pm.response.json().category.name).to.equal(\"cat\");",
							"});",
							"",
							"pm.test(\"Pet added in the correct ID category\", function () {",
							"    pm.expect(pm.response.json().category.id).to.equal(2);",
							"});",
							"",
							"pm.test(\"Pet has a name\", function () {",
							"    pm.expect(pm.response.json().name).to.equal(\"Kitty\");",
							"});",
							"",
							"pm.test(\"Pet has ID\", function () {",
							"    pm.expect(pm.response.json().id).to.equal(200);",
							"});",
							"",
							"pm.test(\"Pet has the correct status\", function () {",
							"    pm.expect(pm.response.json().status).to.equal(\"available\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/200",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"200"
					]
				},
				"description": "Get pig with ID - 300 => Toto"
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cc5ece5a-0f1b-4bc1-8e8a-a41c258f62a3",
						"exec": [
							"pm.test(\"Response code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     // assert that the status code is 200",
							"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
							"     // assert that the response has a valid JSON body",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"});",
							"",
							"pm.test(\"Pet added in the correct category\", function () {",
							"    pm.expect(pm.response.json().category.name).to.equal(\"dog\");",
							"});",
							"",
							"pm.test(\"Pet added in the correct ID category\", function () {",
							"    pm.expect(pm.response.json().category.id).to.equal(1);",
							"});",
							"",
							"pm.test(\"Pet has a name\", function () {",
							"    pm.expect(pm.response.json().name).to.equal(\"Pufy\");",
							"});",
							"",
							"pm.test(\"Pet has ID\", function () {",
							"    pm.expect(pm.response.json().id).to.equal(100);",
							"});",
							"",
							"pm.test(\"Pet has the correct status\", function () {",
							"    pm.expect(pm.response.json().status).to.equal(\"sold\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 100,\r\n  \"category\": {\r\n    \"id\": 1,\r\n    \"name\": \"dog\"\r\n  },\r\n  \"name\": \"Pufy\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"dog\"\r\n    }\r\n  ],\r\n  \"status\": \"sold\"\r\n}"
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				},
				"description": "POST - Updated pet info - \"sold\" dog"
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "beee5441-dbaf-4c7e-b54e-ecf882c84587",
						"exec": [
							"pm.test(\"Response code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     // assert that the status code is 200",
							"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
							"     // assert that the response has a valid JSON body",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"});",
							"",
							"pm.test(\"Pet added in the correct category\", function () {",
							"    pm.expect(pm.response.json().category.name).to.equal(\"cat\");",
							"});",
							"",
							"pm.test(\"Pet added in the correct ID category\", function () {",
							"    pm.expect(pm.response.json().category.id).to.equal(2);",
							"});",
							"",
							"pm.test(\"Pet has a name\", function () {",
							"    pm.expect(pm.response.json().name).to.equal(\"Kitty\");",
							"});",
							"",
							"pm.test(\"Pet has ID\", function () {",
							"    pm.expect(pm.response.json().id).to.equal(200);",
							"});",
							"",
							"pm.test(\"Pet has the correct status\", function () {",
							"    pm.expect(pm.response.json().status).to.equal(\"sold\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 200,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"cat\"\r\n  },\r\n  \"name\": \"Kitty\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"cat\"\r\n    }\r\n  ],\r\n  \"status\": \"sold\"\r\n}"
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				},
				"description": "POST - Updated pet info - \"sold\" dog"
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6d24852e-ad74-43ba-854f-359020f6cc16",
						"exec": [
							"pm.test(\"Response code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     // assert that the status code is 200",
							"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
							"     // assert that the response has a valid JSON body",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"});",
							"",
							"pm.test(\"Pet added in the correct category\", function () {",
							"    pm.expect(pm.response.json().category.name).to.equal(\"pig\");",
							"});",
							"",
							"pm.test(\"Pet added in the correct ID category\", function () {",
							"    pm.expect(pm.response.json().category.id).to.equal(3);",
							"});",
							"",
							"pm.test(\"Pet has a name\", function () {",
							"    pm.expect(pm.response.json().name).to.equal(\"Toto\");",
							"});",
							"",
							"pm.test(\"Pet has ID\", function () {",
							"    pm.expect(pm.response.json().id).to.equal(300);",
							"});",
							"",
							"pm.test(\"Pet has the correct status\", function () {",
							"    pm.expect(pm.response.json().status).to.equal(\"sold\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 300,\r\n  \"category\": {\r\n    \"id\": 3,\r\n    \"name\": \"pig\"\r\n  },\r\n  \"name\": \"Toto\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 3,\r\n      \"name\": \"pig\"\r\n    }\r\n  ],\r\n  \"status\": \"sold\"\r\n}"
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				},
				"description": "POST - Updated pet info - \"sold\" dog"
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet/100",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fc43f9f3-f25f-4c3f-9878-354934da2649",
						"exec": [
							"pm.test(\"Response code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/100",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"100"
					]
				},
				"description": "Deleted - dog ID - 100"
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet/100 Error404-NotFound",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/100",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"100"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet/12341 Error404-NotFound",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/12341",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"12341"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet Error400-BadRequest",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 200,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"cat\"\r\n  },\r\n  \"name\": \"Kitty\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"cat\"\r\n    }\r\n  ],\r\n//  \"status\": \"available\"\r\n}"
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet Error500-ServerError",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 200,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"cat\"\r\n  },\r\n  \"name\": \"Kitty\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}"
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet ID=-0",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": -0,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"cat\"\r\n  },\r\n  \"name\": \"Kitty\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"cat\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}"
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet/-9223372036854775808",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/-9223372036854775808",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"-9223372036854775808"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet Error500-ServerError",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 40000000000000000000000000000000000000000000000000000000000000000000000000000,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"cat\"\r\n  },\r\n  \"name\": \"Kitty\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"cat\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}"
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet Error415-UnsupportedMediaType",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 201,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"cat\"\r\n  },\r\n  \"name\": \"Moon\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"cat\"\r\n    }\r\n  ],\r\n  \"status\": \"sold\"\r\n}"
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet Error400-BadRequest",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 201,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"cat\"\r\n  },\r\n  \"name\": \"Moon\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"cat\"\r\n    }\r\n  ],\r\n  \"status\": \"sold\"\r\n}"
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet/test Error404-NotFound",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/-9223372036854775808",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"-9223372036854775808"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet Error415-UnsupportedMediaType",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cc5ece5a-0f1b-4bc1-8e8a-a41c258f62a3",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 100,\r\n  \"category\": {\r\n    \"id\": 1,\r\n    \"name\": \"dog\"\r\n  },\r\n  \"name\": \"Pufy\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"dog\"\r\n    }\r\n  ],\r\n  \"status\": \"sold\"\r\n}"
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet Error400-BadRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cc5ece5a-0f1b-4bc1-8e8a-a41c258f62a3",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 100,\r\n  \"category\": {\r\n    \"id\": 1,\r\n    \"name\": \"dog\"\r\n  },\r\n  \"name\": \"Pufy\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"dog\"\r\n    }\r\n  ],\r\n  \"status\": \"sold\"\r\n}"
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://petstore.swagger.io/v2/pet/test Error404-NotFound",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/test",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"test"
					]
				}
			},
			"response": []
		}
	]
}